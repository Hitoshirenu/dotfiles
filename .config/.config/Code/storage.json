{
    "telemetry.machineId": "0d8eac2ffbfb139741d086ccd4e647ff664ddab516011b1f3a304474cfc5220f",
    "lastKnownKeybindings": {
        "workbench.action.files.newUntitledFile": {
            "id": "workbench.action.files.newUntitledFile",
            "label": "Ctrl+N",
            "isNative": true
        },
        "workbench.action.files.openFolder": {
            "id": "workbench.action.files.openFolder",
            "label": "Ctrl+K Ctrl+O",
            "isNative": false
        },
        "workbench.action.files.openFile": {
            "id": "workbench.action.files.openFile",
            "label": "Ctrl+O",
            "isNative": true
        },
        "workbench.action.reopenClosedEditor": {
            "id": "workbench.action.reopenClosedEditor",
            "label": "Ctrl+Shift+T",
            "isNative": true
        },
        "workbench.action.openRecent": {
            "id": "workbench.action.openRecent",
            "label": "Ctrl+R",
            "isNative": true
        },
        "workbench.action.files.save": {
            "id": "workbench.action.files.save",
            "label": "Ctrl+S",
            "isNative": true
        },
        "workbench.action.files.saveAs": {
            "id": "workbench.action.files.saveAs",
            "label": "Ctrl+Shift+S",
            "isNative": true
        },
        "workbench.action.openSettings": {
            "id": "workbench.action.openSettings",
            "label": "Ctrl+,",
            "isNative": true
        },
        "workbench.action.openGlobalKeybindings": {
            "id": "workbench.action.openGlobalKeybindings",
            "label": "Ctrl+K Ctrl+S",
            "isNative": false
        },
        "workbench.extensions.action.showRecommendedKeymapExtensions": {
            "id": "workbench.extensions.action.showRecommendedKeymapExtensions",
            "label": "Ctrl+K Ctrl+M",
            "isNative": false
        },
        "workbench.action.selectTheme": {
            "id": "workbench.action.selectTheme",
            "label": "Ctrl+K Ctrl+T",
            "isNative": false
        },
        "workbench.action.newWindow": {
            "id": "workbench.action.newWindow",
            "label": "Ctrl+Shift+N",
            "isNative": true
        },
        "workbench.action.closeWindow": {
            "id": "workbench.action.closeWindow",
            "label": "Ctrl+W",
            "isNative": true
        },
        "workbench.action.closeFolder": {
            "id": "workbench.action.closeFolder",
            "label": "Ctrl+K F",
            "isNative": false
        },
        "workbench.action.closeActiveEditor": {
            "id": "workbench.action.closeActiveEditor",
            "label": "Ctrl+W",
            "isNative": true
        },
        "workbench.action.quit": {
            "id": "workbench.action.quit",
            "label": "Ctrl+Q",
            "isNative": true
        },
        "undo": {
            "id": "undo",
            "label": "Ctrl+Z",
            "isNative": true
        },
        "redo": {
            "id": "redo",
            "label": "Ctrl+Y",
            "isNative": true
        },
        "editor.action.clipboardCutAction": {
            "id": "editor.action.clipboardCutAction",
            "label": "Ctrl+X",
            "isNative": true
        },
        "editor.action.clipboardCopyAction": {
            "id": "editor.action.clipboardCopyAction",
            "label": "Ctrl+C",
            "isNative": true
        },
        "editor.action.clipboardPasteAction": {
            "id": "editor.action.clipboardPasteAction",
            "label": "Ctrl+V",
            "isNative": true
        },
        "actions.find": {
            "id": "actions.find",
            "label": "Ctrl+F",
            "isNative": true
        },
        "editor.action.startFindReplaceAction": {
            "id": "editor.action.startFindReplaceAction",
            "label": "Ctrl+H",
            "isNative": true
        },
        "workbench.action.findInFiles": {
            "id": "workbench.action.findInFiles",
            "label": "Ctrl+Shift+F",
            "isNative": true
        },
        "workbench.action.replaceInFiles": {
            "id": "workbench.action.replaceInFiles",
            "label": "Ctrl+Shift+H",
            "isNative": true
        },
        "editor.emmet.action.expandAbbreviation": {
            "id": "editor.emmet.action.expandAbbreviation",
            "label": "Tab",
            "isNative": true
        },
        "editor.action.commentLine": {
            "id": "editor.action.commentLine",
            "label": "Ctrl+/",
            "isNative": true
        },
        "editor.action.blockComment": {
            "id": "editor.action.blockComment",
            "label": "Ctrl+Shift+A",
            "isNative": true
        },
        "editor.action.insertCursorAbove": {
            "id": "editor.action.insertCursorAbove",
            "label": "Shift+Alt+Up",
            "isNative": true
        },
        "editor.action.insertCursorBelow": {
            "id": "editor.action.insertCursorBelow",
            "label": "Shift+Alt+Down",
            "isNative": true
        },
        "editor.action.insertCursorAtEndOfEachLineSelected": {
            "id": "editor.action.insertCursorAtEndOfEachLineSelected",
            "label": "Shift+Alt+I",
            "isNative": true
        },
        "editor.action.addSelectionToNextFindMatch": {
            "id": "editor.action.addSelectionToNextFindMatch",
            "label": "Ctrl+D",
            "isNative": true
        },
        "editor.action.selectHighlights": {
            "id": "editor.action.selectHighlights",
            "label": "Ctrl+Shift+L",
            "isNative": true
        },
        "editor.action.copyLinesUpAction": {
            "id": "editor.action.copyLinesUpAction",
            "label": "Ctrl+Shift+Alt+Up",
            "isNative": true
        },
        "editor.action.copyLinesDownAction": {
            "id": "editor.action.copyLinesDownAction",
            "label": "Ctrl+Shift+Alt+Down",
            "isNative": true
        },
        "editor.action.moveLinesUpAction": {
            "id": "editor.action.moveLinesUpAction",
            "label": "Alt+Up",
            "isNative": true
        },
        "editor.action.moveLinesDownAction": {
            "id": "editor.action.moveLinesDownAction",
            "label": "Alt+Down",
            "isNative": true
        },
        "editor.action.selectAll": {
            "id": "editor.action.selectAll",
            "label": "Ctrl+A",
            "isNative": true
        },
        "editor.action.smartSelect.grow": {
            "id": "editor.action.smartSelect.grow",
            "label": "Shift+Alt+Right",
            "isNative": true
        },
        "editor.action.smartSelect.shrink": {
            "id": "editor.action.smartSelect.shrink",
            "label": "Shift+Alt+Left",
            "isNative": true
        },
        "workbench.view.explorer": {
            "id": "workbench.view.explorer",
            "label": "Ctrl+Shift+E",
            "isNative": true
        },
        "workbench.view.search": {
            "id": "workbench.view.search",
            "label": "Ctrl+Shift+F",
            "isNative": true
        },
        "workbench.view.scm": {
            "id": "workbench.view.scm",
            "label": "Ctrl+Shift+G",
            "isNative": true
        },
        "workbench.view.debug": {
            "id": "workbench.view.debug",
            "label": "Ctrl+Shift+D",
            "isNative": true
        },
        "workbench.view.extensions": {
            "id": "workbench.view.extensions",
            "label": "Ctrl+Shift+X",
            "isNative": true
        },
        "workbench.action.output.toggleOutput": {
            "id": "workbench.action.output.toggleOutput",
            "label": "Ctrl+K Ctrl+H",
            "isNative": false
        },
        "workbench.debug.action.toggleRepl": {
            "id": "workbench.debug.action.toggleRepl",
            "label": "Ctrl+Shift+Y",
            "isNative": true
        },
        "workbench.action.terminal.toggleTerminal": {
            "id": "workbench.action.terminal.toggleTerminal",
            "label": "Ctrl+`",
            "isNative": true
        },
        "workbench.actions.view.problems": {
            "id": "workbench.actions.view.problems",
            "label": "Ctrl+Shift+M",
            "isNative": true
        },
        "workbench.action.showCommands": {
            "id": "workbench.action.showCommands",
            "label": "Ctrl+Shift+P",
            "isNative": true
        },
        "workbench.action.toggleFullScreen": {
            "id": "workbench.action.toggleFullScreen",
            "label": "F11",
            "isNative": true
        },
        "workbench.action.toggleZenMode": {
            "id": "workbench.action.toggleZenMode",
            "label": "Ctrl+K Z",
            "isNative": false
        },
        "workbench.action.splitEditor": {
            "id": "workbench.action.splitEditor",
            "label": "Ctrl+\\",
            "isNative": true
        },
        "workbench.action.toggleEditorGroupLayout": {
            "id": "workbench.action.toggleEditorGroupLayout",
            "label": "Shift+Alt+0",
            "isNative": true
        },
        "workbench.action.toggleSidebarVisibility": {
            "id": "workbench.action.toggleSidebarVisibility",
            "label": "Ctrl+B",
            "isNative": true
        },
        "workbench.action.togglePanel": {
            "id": "workbench.action.togglePanel",
            "label": "Ctrl+J",
            "isNative": true
        },
        "editor.action.toggleWordWrap": {
            "id": "editor.action.toggleWordWrap",
            "label": "Alt+Z",
            "isNative": true
        },
        "workbench.action.zoomIn": {
            "id": "workbench.action.zoomIn",
            "label": "Ctrl+=",
            "isNative": true
        },
        "workbench.action.zoomOut": {
            "id": "workbench.action.zoomOut",
            "label": "Ctrl+-",
            "isNative": true
        },
        "workbench.action.zoomReset": {
            "id": "workbench.action.zoomReset",
            "label": "Ctrl+NumPad0",
            "isNative": false
        },
        "workbench.action.navigateBack": {
            "id": "workbench.action.navigateBack",
            "label": "Ctrl+Alt+-",
            "isNative": true
        },
        "workbench.action.navigateForward": {
            "id": "workbench.action.navigateForward",
            "label": "Ctrl+Shift+-",
            "isNative": true
        },
        "workbench.action.nextEditor": {
            "id": "workbench.action.nextEditor",
            "label": "Ctrl+PageDown",
            "isNative": true
        },
        "workbench.action.previousEditor": {
            "id": "workbench.action.previousEditor",
            "label": "Ctrl+PageUp",
            "isNative": true
        },
        "workbench.action.openNextRecentlyUsedEditorInGroup": {
            "id": "workbench.action.openNextRecentlyUsedEditorInGroup",
            "label": "Ctrl+Tab",
            "isNative": true
        },
        "workbench.action.openPreviousRecentlyUsedEditorInGroup": {
            "id": "workbench.action.openPreviousRecentlyUsedEditorInGroup",
            "label": "Ctrl+Shift+Tab",
            "isNative": true
        },
        "workbench.action.focusFirstEditorGroup": {
            "id": "workbench.action.focusFirstEditorGroup",
            "label": "Ctrl+1",
            "isNative": true
        },
        "workbench.action.focusSecondEditorGroup": {
            "id": "workbench.action.focusSecondEditorGroup",
            "label": "Ctrl+2",
            "isNative": true
        },
        "workbench.action.focusThirdEditorGroup": {
            "id": "workbench.action.focusThirdEditorGroup",
            "label": "Ctrl+3",
            "isNative": true
        },
        "workbench.action.focusNextGroup": {
            "id": "workbench.action.focusNextGroup",
            "label": "Ctrl+K Ctrl+RightArrow",
            "isNative": false
        },
        "workbench.action.focusPreviousGroup": {
            "id": "workbench.action.focusPreviousGroup",
            "label": "Ctrl+K Ctrl+LeftArrow",
            "isNative": false
        },
        "workbench.action.quickOpen": {
            "id": "workbench.action.quickOpen",
            "label": "Ctrl+P",
            "isNative": true
        },
        "workbench.action.gotoSymbol": {
            "id": "workbench.action.gotoSymbol",
            "label": "Ctrl+Shift+O",
            "isNative": true
        },
        "workbench.action.showAllSymbols": {
            "id": "workbench.action.showAllSymbols",
            "label": "Ctrl+T",
            "isNative": true
        },
        "editor.action.goToDeclaration": {
            "id": "editor.action.goToDeclaration",
            "label": "F12",
            "isNative": true
        },
        "editor.action.goToImplementation": {
            "id": "editor.action.goToImplementation",
            "label": "Ctrl+F12",
            "isNative": true
        },
        "workbench.action.gotoLine": {
            "id": "workbench.action.gotoLine",
            "label": "Ctrl+G",
            "isNative": true
        },
        "workbench.action.debug.start": {
            "id": "workbench.action.debug.start",
            "label": "F5",
            "isNative": true
        },
        "workbench.action.debug.run": {
            "id": "workbench.action.debug.run",
            "label": "Ctrl+F5",
            "isNative": true
        },
        "workbench.action.debug.stop": {
            "id": "workbench.action.debug.stop",
            "label": "Shift+F5",
            "isNative": true
        },
        "workbench.action.debug.restart": {
            "id": "workbench.action.debug.restart",
            "label": "Ctrl+Shift+F5",
            "isNative": true
        },
        "workbench.action.debug.stepOver": {
            "id": "workbench.action.debug.stepOver",
            "label": "F10",
            "isNative": true
        },
        "workbench.action.debug.stepInto": {
            "id": "workbench.action.debug.stepInto",
            "label": "F11",
            "isNative": true
        },
        "workbench.action.debug.stepOut": {
            "id": "workbench.action.debug.stepOut",
            "label": "Shift+F11",
            "isNative": true
        },
        "workbench.action.debug.continue": {
            "id": "workbench.action.debug.continue",
            "label": "F5",
            "isNative": true
        },
        "editor.debug.action.toggleBreakpoint": {
            "id": "editor.debug.action.toggleBreakpoint",
            "label": "F9",
            "isNative": true
        },
        "editor.debug.action.toggleColumnBreakpoint": {
            "id": "editor.debug.action.toggleColumnBreakpoint",
            "label": "Shift+F9",
            "isNative": true
        },
        "workbench.action.tasks.build": {
            "id": "workbench.action.tasks.build",
            "label": "Ctrl+Shift+B",
            "isNative": true
        }
    },
    "theme": "vs-dark tobiasalthoff-atom-material-theme-themes-Atom-Material-Theme-color-theme-json",
    "themeBackground": "#263238",
    "openedPathsList": {
        "workspaces": [
            "/home/deepjyoti30/AndroidStudioProjects/HelloWorld/app/build/outputs/apk/debug",
            "/home/deepjyoti30/AndroidStudioProjects",
            "/home/deepjyoti30/Downloads",
            "/home/deepjyoti30/.zsh"
        ],
        "files": [
            "/tmp/yaourt-tmp-deepjyoti30/aur-i3lock-fancier-git/i3lock-fancier.install",
            "/tmp/yaourt-tmp-deepjyoti30/aur-python2-pyspotify/PKGBUILD",
            "/tmp/yaourt-tmp-deepjyoti30/aur-mopidy-spotify/PKGBUILD",
            "/tmp/yaourt-tmp-deepjyoti30/aur-libax25/libax25.install",
            "/tmp/yaourt-tmp-deepjyoti30/aur-vtop/PKGBUILD",
            "/run/media/deepjyoti30/MyStuff/web/MyPage/style.css",
            "/run/media/deepjyoti30/MyStuff/slave/log_for_master.log",
            "/run/media/deepjyoti30/MyStuff/slave/sw.list",
            "/home/deepjyoti30/etc/pulse/default.pa",
            "/home/deepjyoti30/.config/gtk-2.0/gtkfilechooser.ini",
            "/home/deepjyoti30/.config/gtk-2.0/settings.ini",
            "/home/deepjyoti30/.config/gtk-3.0/settings.ini",
            "/home/deepjyoti30/dotfiles/mine-ubun/README.md",
            "/home/deepjyoti30/dotfiles/mine-ubun/.git/COMMIT_EDITMSG",
            "/home/deepjyoti30/.config/polybar/currentcmus.sh",
            "/home/deepjyoti30/.config/polybar/currentsong.sh",
            "/home/deepjyoti30/.config/cava/config.marc",
            "/home/deepjyoti30/.config/cava/config",
            "/home/deepjyoti30/.config/cava/config.bak",
            "/home/deepjyoti30/dotfiles/marc/home/.config/cava/config",
            "/home/deepjyoti30/.config/termite/config",
            "/tmp/yaourt-tmp-deepjyoti30/aur-python-glyr-git/PKGBUILD",
            "/usr/share/cmus/my.theme",
            "/home/deepjyoti30/.config/cmus/base-16.theme",
            "/home/deepjyoti30/.config/cmus/tommorow.theme",
            "/usr/share/cmus/default.theme",
            "/home/deepjyoti30/755",
            "/usr/share/cmus/itunes.theme",
            "/home/deepjyoti30/cmus_temp/my.theme",
            "/home/deepjyoti30/scripts/nana.sh",
            "/etc/modprobe.d/alsa-base.conf",
            "/home/deepjyoti30/.config/rofi/config",
            "/home/deepjyoti30/dotfiles/marc/home/.config/rofi/config",
            "/home/deepjyoti30/.config/cmus/playlist.pl",
            "/home/deepjyoti30/polybar-animations/space-ship2/space-ship2.py",
            "/home/deepjyoti30/.config/polybar/showpp.sh",
            "/home/deepjyoti30/.config/polybar/prev.sh",
            "/home/deepjyoti30/.config/polybar/next.sh",
            "/home/deepjyoti30/scripts/pp.sh",
            "/home/deepjyoti30/.i3/config.bak",
            "/home/deepjyoti30/.i3/config",
            "/home/deepjyoti30/Web/Nana/index.html",
            "/run/media/deepjyoti30/MyStuff/slave/Slave.py",
            "/run/media/deepjyoti30/MyStuff/slave/zip.py",
            "/home/deepjyoti30/scripts/new.py",
            "/home/deepjyoti30/scripts/song.sh",
            "/home/deepjyoti30/dotfiles/marc/home/.config/polybar/spotify.sh",
            "/home/deepjyoti30/.config/polybar/time.sh",
            "/home/deepjyoti30/.config/polybar/weather.sh",
            "/home/deepjyoti30/.config/polybar/config",
            "/home/deepjyoti30/scripts/helloworld.sh",
            "/home/deepjyoti30/Web/Nana/main.js",
            "/home/deepjyoti30/Web/Nana/main.css",
            "/home/deepjyoti30/Web/Nana/style.css",
            "/etc/locale.conf",
            "/home/deepjyoti30/.config/compton.conf",
            "/home/deepjyoti30/.config/compton/config",
            "/home/deepjyoti30/.zsh_aliases.zsh",
            "/home/deepjyoti30/dotfiles/marc/home/.zsh_aliases.zsh",
            "/home/deepjyoti30/dotfiles/marc/home/.zshrc",
            "/home/deepjyoti30/.zshrc",
            "/usr/share/oh-my-zsh/zshrc",
            "/home/deepjyoti30/.zshrc.bak",
            "/home/deepjyoti30/.oh-my-zsh/oh-my-zsh.sh",
            "/home/deepjyoti30/dotfiles/marc/home/.config/feh/themes",
            "/home/deepjyoti30/dotfiles/marc/home/.config/i3/config",
            "/home/deepjyoti30/.xinitrc",
            "/home/deepjyoti30/dotfiles/marc/home/.xinitrc",
            "/home/deepjyoti30/.Xresources",
            "/home/deepjyoti30/dotfiles/marc/home/.Xresources",
            "/config/polybar/config",
            "/home/deepjyoti30/dotfiles/marc/home/.config/termite/config",
            "/home/deepjyoti30/dotfiles/marc/home/.config/termite/conf",
            "/home/deepjyoti30/dotfiles/marc/home/.config/gtk-3.0/settings.ini",
            "/home/deepjyoti30/dotfiles/marc/home/.config/gtk-3.0/gtk.css",
            "/home/deepjyoti30/.config/termite/config.bak",
            "/home/deepjyoti30/dotfiles/marc/home/.config/gtk-4.0/settings.ini",
            "/home/deepjyoti30/dotfiles/marc/home/.config/compton/config",
            "/home/deepjyoti30/async.zsh",
            "/home/deepjyoti30/pure.zsh",
            "/usr/share/oh-my-zsh/oh-my-zsh.sh",
            "/home/deepjyoti30/dotfiles/marc/home/.zsh_functions.zsh",
            "/home/deepjyoti30/dotfiles/marc/home/zsh_functions.zsh",
            "/home/deepjyoti30/dotfiles/marc/home/.zsh_aliases",
            "/home/deepjyoti30/.bash_profile",
            "/home/deepjyoti30/.zprofile",
            "/home/deepjyoti30/dotfiles/marc/home/.zprofile",
            "/config/termite/config"
        ]
    },
    "windowsState": {
        "openedWindows": [],
        "lastActiveWindow": {
            "backupPath": "/home/deepjyoti30/.config/Code/Backups/1528353967997",
            "uiState": {
                "mode": 1,
                "x": 696,
                "y": 51,
                "width": 647,
                "height": 666
            }
        }
    }
}